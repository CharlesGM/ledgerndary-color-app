name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  # pull_request:
  #   branches:
  #     - main
      

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask

      - name: Extract PAGE_COLOUR from Dockerfile
        id: extract_page_colour
        run: |
          PAGE_COLOUR=$(grep 'ENV PAGE_COLOUR=' Dockerfile | cut -d '=' -f 2)
          echo "PAGE_COLOUR=${PAGE_COLOUR}" >> $GITHUB_ENV

      - name: Validate PAGE_COLOUR
        run: |
          VALID_COLORS="white black red green blue yellow cyan magenta"
          if [[ ! " ${VALID_COLORS[@]} " =~ " ${PAGE_COLOUR} " ]]; then
            echo "Invalid color: ${PAGE_COLOUR}. Must be one of: ${VALID_COLORS}"
            exit 1
          else
            echo "PAGE_COLOUR is valid: ${PAGE_COLOUR}"
          fi

      - name: Run unit tests
        run: |
          python -m unittest discover -s . -p "test_app.py"
        env:
          PAGE_COLOUR: ${{ env.PAGE_COLOUR }}

  build-and-push:
    needs: unit-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract PAGE_COLOUR from Dockerfile
        id: extract-color
        run: |
          PAGE_COLOUR=$(grep 'ENV PAGE_COLOUR=' Dockerfile | sed 's/ENV PAGE_COLOUR=//')
          echo "PAGE_COLOUR=${PAGE_COLOUR}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU (for multi-platform builds)
        uses: docker/setup-qemu-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/colour-app:${{ env.PAGE_COLOUR }}


      # - name: Set up Google Cloud SDK
      #   uses: google-github-actions/setup-gcloud@v1
      #   with:
      #     service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      #     project_id: ${{ secrets.GCP_PROJECT_ID }}

      # - name: Authenticate Docker to Google Cloud Artifact Registry
      #   run: |
      #     gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev --quiet

      - name: Build and push Docker image to Google Cloud Artifact Registry
        run: |
          docker build -t ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY_NAME }}/colour-app:${{ env.PAGE_COLOUR }} .
          docker push ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY_NAME }}/colour-app:${{ env.PAGE_COLOUR }}








      # - name: Clone the ledgerndary-color-app-terraform
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      #   run: |
      #     git clone https://${GITHUB_TOKEN}@github.com/CharlesGM/ledgerndary-color-app-terraform.git
      #     cd ledgerndary-color-app-terraform
      #     sed -i "s|^container_image *= *\".*\"|container_image = \"gachango/colour-app:${{ env.PAGE_COLOUR }}\"|" ledgerndary/terraform.tfvars
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
      #     git config --global user.name "GitHub Actions"
      #     git add ledgerndary/terraform.tfvars
      #     git commit -m "Update container_image to gachango/colour-app:${{ env.PAGE_COLOUR }}"
      #     git push https://${GITHUB_TOKEN}@github.com/CharlesGM/ledgerndary-color-app-terraform.git main

      # - name: Logout from Docker Hub
      #   run: docker logout
